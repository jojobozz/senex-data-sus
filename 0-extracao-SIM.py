# -*- coding: utf-8 -*-
"""Projeto_Senex.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bxn00Uasuad2geznwsoLD14Okkh1nBRE
"""

import sys
IN_COLAB = 'google.colab' in sys.modules

if IN_COLAB:
    !pip install pySUS==0.5.8
    !pip install geopandas
    !pip install dython

#assim que baixar é recomendável dar um "restart runtime" que tem logo abaixo

from pysus.online_data import SIM
from pysus.preprocessing.decoders import decodifica_idade_SIM, translate_variables_SIM
import pandas as pd
import numpy as np

def dwdados(ano, estado, conv_cat=True, create_datetime=True, delete_old_datetime=True):
    df = SIM.download(estado, ano)
    
    df.IDADE = pd.to_numeric(df.IDADE)
    
    if (create_datetime==True):
        df['DATETIME'] = pd.to_datetime(df['DTOBITO']+' '+df['HORAOBITO'], format="%d%m%Y %H%M", errors='coerce')
        
    if (delete_old_datetime==True):
        df=df.drop(columns=['DTOBITO', 'HORAOBITOdatasus sim dados'])

     
    return df

def trocar_indice(serie, dicionario):
    idx = serie.index
    nidx = pd.Series(idx).map(dicionario, na_action='ignore')
    serie.index = nidx
    return serie

def filtro_cid (df, lista_cid, colunas=['LINHAA', 'LINHAB', 'LINHAC', 'LINHAD', 'LINHAII']):
    # search_values = ['J960'], 
    return df[df[colunas].stack().str.contains('|'.join(lista_cid),case=False,na=False).groupby(level=0).any()]

def converter_idade(df):
    ndf = df.copy()
    #df['IDADE'] = df['IDADE'].apply(lambda x: x - 400 if x > 400 else 0 )
    ndf['IDADE'] = ndf['IDADE'].apply(lambda x: x - 400 if x > 400 else 0 )
    ndf['IDADE'] = ndf['IDADE'].apply(lambda x: x if x != 599 else np.nan )
    #idade=(df[(df['IDADE']>400) & (df['IDADE']<550)]['IDADE']-400)    
    return ndf

estados =['SC'] #colocar os estados
anos = [2011,2012,2013,2014,2015,2016,2017,2018,2019,2020] #colocar os anos
banco={}
for y in anos:
 for uf in estados: 
  banco[uf, y] = dwdados(y, uf, create_datetime=False, delete_old_datetime=False)

dados = pd.concat({ k: pd.DataFrame.from_dict(v) 
for k, v in banco.items() }, axis=0).reset_index()

dados.to_csv('dados_2011_2020.csv')

dados.rename(columns={'level_0': 'ESTADO', 'level_1': 'ANO'}, inplace=True) #renomeando colunas
dados.columns